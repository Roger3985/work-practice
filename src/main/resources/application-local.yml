server:
  port: 8080
spring:
  datasource:
    url: jdbc:postgresql://localhost:5433/postgres
    username: postgres
    password: mysecretpassword
    driver-class-name: org.postgresql.Driver
  mvc:
    view:
      prefix: /web/zul/
      suffix: .zul
  quartz:
    jdbc:
      initialize-schema: always
    job-store-type: jdbc
    properties:
      org:
        quartz:
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
            dataSource: quartzDataSource
            tablePrefix: QRTZ_
            isClustered: true
          dataSource:
            quartzDataSource:
              provider: hikaricp
              driver: org.postgresql.Driver
              url: jdbc:postgresql://localhost:5433/postgres
              user: postgres
              password: mysecretpassword
              maxConnections: 10
#  quartz:
#    scheduler-name: myScheduler
#    properties:
#      org:
#        quartz:
#          jobStore:
#            class: org.quartz.impl.jdbcjobstore.JobStoreTX
#            driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
#            dataSource: myDataSource
#            tablePrefix: QRTZ_
#            isClustered: true
#          threadPool:
#            class: org.quartz.simpl.SimpleThreadPool
#            threadCount: 10
#          jobFactory:
#            class: org.springframework.scheduling.quartz.SpringBeanJobFactory
#          scheduler:
#            instanceName: myScheduler
#          job:
#            autoStartup: true
#          trigger:
#            misfireInstruction: 1
#          cron:
#            # Job to run every 5 seconds
#            fiveSecondJob:
#              cron: "*/5 * * * * ?"
#              jobName: myJob2
#              jobGroup: fiveSecondJobGroup
#            # Job to run every 5 minutes
#            fiveMinuteJob:
#              cron: "0 0/5 * * * ?"
#              jobName: frequentJob
#              jobGroup: fiveMinuteJobGroup
#            # Job to run every 10 o'clock
#            tenClockJob:
#              cron: "0 0 10 * * ?"
#              jobName: sampleJob
#              jobGroup: tenClockJobGroup


#  thymeleaf:
#    prefix: classpath:/templates/
#    suffix: html
#    encoding: UTF-8

# mybatis 整合 mybatis 可以拋棄 mybatis-config.xml
mybatis:
  # mapper-locations: classpath:mappers/*.xml
  # config-location: classpath:mybatis-config.xml
  datasource:
    url: jdbc:postgresql://localhost:5433/postgres
    username: postgres
    password: mysecretpassword
    driver-class-name: org.postgresql.Driver

# 配置 SpringDoc OpenAPI
springdoc:
  api-docs:
    enabled: true # 預設的
    path: /api-docs # API 文件的路徑，預設的
  swagger-ui:
    enabled: true # 預設的
    path: /swagger-ui.html # Swagger UI 界面的路徑，預設的

# 配置 Log4j2 Logging Configuration
logging:
#  level:
#    root: info # 根據日誌的日誌級別
  file:
    name: myApp # 日誌文件名稱和路徑，相對於應用程式運行目錄
    config: classpath:log4j2-spring.xml # Log4j2 的配置文件位置，使用 classpath 資源

zk:
  homepage: user/user_list
  zul-view-resolver-prefix: /zul
  zul-view-resolver-suffix: .zul
  zul-view-resolver-enabled: true
  richlet-filter-mapping: /richlet/*
  resource-uri: /zkres


